import math
import random
minDist = 75e-9
dendriteRadius = 0.1e-6
Protofilaments = 1
RotateAngle = 0 #math.pi/4
MTRadius = 12.5e-9
VoxelRadius = 0.4e-8
KinesinRadius = 0.4e-8

mtOriginX = [0]#, 0]
mtOriginZ = [0]#, 0.5]
mtOriginY = [0]#, 0.5]
completedLengths = [KinesinRadius*2*700]#, 0.5e-6]
dendriteLength = completedLengths[0]*1.2

theSimulator.createStepper('SpatiocyteStepper', 'SS').VoxelRadius = VoxelRadius
theSimulator.rootSystem.StepperID = 'SS'
theSimulator.createEntity('Variable', 'Variable:/:GEOMETRY').Value = 2
theSimulator.createEntity('Variable', 'Variable:/:ROTATEZ').Value = RotateAngle
theSimulator.createEntity('Variable', 'Variable:/:LENGTHX').Value = dendriteLength
theSimulator.createEntity('Variable', 'Variable:/:LENGTHY').Value = dendriteRadius*2
theSimulator.createEntity('Variable', 'Variable:/:VACANT')
theSimulator.createEntity('Variable', 'Variable:/:Kinesin').Value = 0
theSimulator.createEntity('Variable', 'Variable:/:MTKinesin' ).Value = 0
theSimulator.createEntity('Variable', 'Variable:/:MTKinesinATP' ).Value = 0
theSimulator.createEntity('Variable', 'Variable:/:Tubulin' ).Value = 0
visualLogger = theSimulator.createEntity('VisualizationLogProcess', 'Process:/:visualLogger')
visualLogger.VariableReferenceList = [['_', 'Variable:/:Kinesin']]
visualLogger.VariableReferenceList = [['_', 'Variable:/:Tubulin' ]]
visualLogger.VariableReferenceList = [['_', 'Variable:/:MTKinesin' ]]
visualLogger.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP' ]]
visualLogger.LogInterval = 10
react = theSimulator.createEntity('SpatiocyteNextReactionProcess', 'Process:/:attach')
react.VariableReferenceList = [['_', 'Variable:/:Tubulin','-1']]
react.VariableReferenceList = [['_', 'Variable:/:MTKinesin','1']]
react.k = 0.001e+3
react = theSimulator.createEntity('SpatiocyteNextReactionProcess', 'Process:/:detach')
react.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP','-1']]
react.VariableReferenceList = [['_', 'Variable:/:Tubulin','1']]
react.k = 0.0001e+3
react = theSimulator.createEntity('SpatiocyteNextReactionProcess', 'Process:/:hydrolysis')
react.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP','-1']]
react.VariableReferenceList = [['_', 'Variable:/:MTKinesin','1']]
react.k = 0.2e+3
react = theSimulator.createEntity('SpatiocyteNextReactionProcess', 'Process:/:phosphorylate')
react.VariableReferenceList = [['_', 'Variable:/:MTKinesin','-1']]
react.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP','1']]
react.k = 0.145e+3
react = theSimulator.createEntity('SpatiocyteNextReactionProcess', 'Process:/:ratchet')
react.VariableReferenceList = [['_', 'Variable:/:MTKinesin','-1']]
react.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP','1']]
react.BindingSite = 0
react.k = 0.055e+3
diffuse = theSimulator.createEntity('DiffusionProcess', 'Process:/:diffusePlus')
diffuse.VariableReferenceList = [['_', 'Variable:/:MTKinesin']]
diffuse.D = 0.04e-12
for i in range(len(completedLengths)):
  Microtubule = theSimulator.createEntity('MicrotubuleProcess', 'Process:/:Microtubule%d' %i)
  Microtubule.OriginX = mtOriginX[i]
  Microtubule.OriginY = mtOriginY[i]
  Microtubule.OriginZ = mtOriginZ[i]
  Microtubule.RotateX = 0
  Microtubule.RotateY = 0
  Microtubule.RotateZ = RotateAngle
  Microtubule.Length = completedLengths[i]
  Microtubule.Radius = MTRadius
  Microtubule.SubunitRadius = KinesinRadius
  Microtubule.Filaments = Protofilaments
  Microtubule.Periodic = 1
  Microtubule.VariableReferenceList = [['_', 'Variable:/:MTKinesin' ]]
  Microtubule.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP' ]]
  Microtubule.VariableReferenceList = [['_', 'Variable:/:Tubulin' , '-1']]
  Histogram = theSimulator.createEntity('HistogramLogProcess', 'Process:/:Histogram%d' %i)
  Histogram.VariableReferenceList = [['_', 'Variable:/:MTKinesin' ]]
  Histogram.VariableReferenceList = [['_', 'Variable:/:MTKinesinATP' ]]
  Histogram.OriginX = mtOriginX[i]
  Histogram.OriginY = mtOriginY[i]
  Histogram.OriginZ = mtOriginZ[i]
  Histogram.RotateX = 0
  Histogram.RotateY = 0
  Histogram.RotateZ = RotateAngle
  Histogram.Length = completedLengths[i]
  Histogram.Radius = MTRadius+KinesinRadius
  Histogram.Bins = 700
  Histogram.LogStart = 5
  Histogram.LogEnd = 10000
  Histogram.LogInterval = 1
  Histogram.Iterations = 1
  Histogram.FileName = "2005.nishinari.prl.Fig3.right.csv"
run(Histogram.LogEnd + 0.1)

