Packages to be installed on a fresh version of Ubuntu 11.04:
sudo apt-get install automake libtool g++ libgsl0-dev python-numpy python-ply libboost-python-dev libgtkmm-2.4-dev libgtkglextmm-x11-1.2-dev libhdf5-serial-dev git

Steps to install E-Cell System v3:
cd
mkdir wrk
cd wrk
git clone https://github.com/ecell/ecell3.git
cd ecell3
./autogen.sh
./configure --prefix=$HOME/root
make -j3
make install (files will be installed in the $HOME/root directory)
gedit ~/.bashrc
  add the following at the bottom
      export PATH=$HOME/root/bin:$PATH
      export LD_LIBRARY_PATH=$HOME/root/lib:$LD_LIBRARY_PATH:.
      export PYTHONPATH=$HOME/root/lib/python:$HOME/root/lib/python2.7/site-packages:$PYTHONPATH
      export ECELL3_DM_PATH=.
source ~/.bashrc

Try running a simple model:
ecell3-session-monitor (try opening it, and then close it)
cd $HOME/wrk/ecell3/doc/samples/simple/
ecell3-em2eml simple.em
ecell3-session-monitor
load the model simple.eml and run

Steps to install E-Cell3-Spatiocyte:
cd $HOME/wrk
git clone git://github.com/ecell/ecell3-spatiocyte.git
cd ecell3-spatiocyte
make (or 'make -j3' if the CPU has two or more cores)

Steps to run E-Cell3-Spatiocyte MinDE model:
cd $HOME/wrk/ecell3-spatiocyte/
ecell3-em2eml 2010.arjunan.syst.synth.biol.wt.em
ecell3-sessiom-monitor
load the model 2010.arjunan.syst.synth.biol.wt.eml and run

Steps to view the simulation:
The simulation data will be logged in visualLog0.dat
To view the logged simulation, type
./spatiocyte
The programme spatiocyte will load the visualLog0.dat file.
The following keyboard shortcuts are available for the visualizer:
enter: pause/step forward once/change the simulation direction to be forward
space bar: pause/step backward once/change the simulation direction to be reverse
pause: play/pause the visualizer
arrow keys: rotate the visualizer
page up: zoom in
page down: zoom out
home: go to default zoom level and orientation settings
Right click on the molecule species name to change the species color.


Creating movies from snapshot png files
Lossless movie:
mencoder mf://*.png -mf w=400:h=400:fps=25:type=png -ovc copy -oac copy -o output.avi
ffmpeg -i image%07d.png -vcodec ffv1 -sameq test.mp4
ffmpeg -i image%07d.png -vcodec huffyuv test.mp4
Recoding larger avi movies to smaller mp4:
ffmpeg -i input.avi -sameq output.mp4
Compressed high quality:
mencoder mf://*.png -mf w=400:h=400:fps=25:type=png -ovc x264 -x264encopts crf=19 -o out.mp4

Memory debugging:
valgrind --tool=memcheck --num-callers=40 --leak-check=full python $HOME/root/bin/ecell3-session -f test.eml

